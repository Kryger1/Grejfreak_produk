
// 1. Inkluder Bootstrap's funktioner f√∏rst
// Dette g√∏r det muligt at bruge funktioner som f.eks. farvejusteringer og matematik f√∏r resten indl√¶ses.

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)

@import "../node_modules/bootstrap/scss/functions";


// 2. Overstyr standardvariabler (f√∏r Bootstrap selv indl√¶ses)
//
// HVAD: Her definerer vi **SCSS-variabler**, som bruges til at gemme v√¶rdier
// (som farver, skrifttyper, dekorationsregler osv.).
//
// OM `$`: Alle SCSS-variabler starter med `$` ‚Äì det betyder "variabel", alts√• en navngivet v√¶rdi,
// kan genbruge overalt i kode. F.eks. $grejfreak-orange = #e84f15.
//
// HVORFOR: definerer disse variabler **f√∏r vi importerer Bootstrap-variablerne**,
// fordi SCSS ellers ikke vil bruge vores versioner. Bootstrap har selv default-variabler,
// men hvis vi s√¶tter vores v√¶rdier f√∏rst, s√• bliver de brugt i stedet.
//
// FORDELE:
// - Du skal kun √¶ndre farver eller skrifttyper √©t sted.
// - Din kode bliver nemmere at l√¶se, vedligeholde og opdatere.
// - Det sikrer ensartethed i designet.
// - Du kan tilpasse Bootstrap til dit eget brand uden at rode i Bootstrap-filerne.
//
// ALMINDELIG CSS kan ikke dette ‚Äì SCSS giver dig **mere magt og bedre struktur**.

$link-decoration: none;              // Fjerner understregning fra links globalt (√¶ndrer Bootstrap-default)
$grejfreak-orange: #e84f15;          // Prim√¶r brandfarve ‚Äì bruges i fx overskrifter og CTA-knapper
$grejfreak-baggrund: #EFEBE2;        // Lys baggrund ‚Äì bruges som body-baggrund
$grejfreak-footer: #1F1F1F;          // M√∏rk gr√•sort farve til footer
$grejfreak-gr√∏n: #284510;            // Dyb gr√∏n farve til menuer, badges, elementer
$font-grejfreak: 'Exo 2', sans-serif; // Brugerdefineret skrifttype ‚Äì til hele layoutet


// 3. Include remainder of required Bootstrap stylesheets
//
// HVAD: Disse linjer importerer Bootstrap's **core-variabler** og **dark-mode-variabler**.
//
// @import:
// - I SCSS bruges `@import` til at hente andre SCSS-filer og inkludere deres indhold her.
// - Det svarer til at "klippe indholdet ind", som om det stod i denne fil.
//
// HVORFOR:
// - Vi importerer disse filer **efter** vores egne variabler (blok 2),
//   s√• Bootstrap bruger vores overstyringer frem for sine egne standarder.
//
// HVAD INDEHOLDER DE?
// - `variables.scss` indeholder ALLE standard-variabler i Bootstrap (farver, padding, fonts, breakpoints osv.)
// - `variables-dark.scss` indeholder samme struktur, men tilpasset til m√∏rke temaer (dark mode)
//
// RESULTAT:
// - Efter dette punkt kender SCSS alle Bootstrap-variablerne.
// - Og da vi skrev vores egne v√¶rdier f√∏r, vil de allerede v√¶re i brug i Bootstrap‚Äôs system.
//
// OBS: Dette er et centralt punkt i SCSS-filerne ‚Äì **herfra bliver din tilpasning en del af Bootstrap's motor.**

@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";


// 4. Include any default map overrides here
//
// HVAD: Her definerer vi en SCSS "map" kaldet `$custom-colors`.
// - Et map i SCSS svarer til en slags **liste med navngivne v√¶rdier** (som en ordbog).
// - Det minder om JSON eller et key-value-par: "navn": v√¶rdi.
//
// FORM√ÖL:
// - Vi bruger `$custom-colors` til at definere **vores egne farver**,
//   s√• de kan bruges i Bootstrap-komponenter via `$theme-colors`.
// - Det g√∏r det muligt at bruge f.eks. `text-grejfreak`, `bg-footer`, `border-proMenu`, osv.
//
// STRUKTUREN:
// - "farve": $cyan-400;           // En Bootstrap-farve som test (valgfri)
// - "grejfreak": $grejfreak-orange;  // Din prim√¶re orange brandfarve
// - "bagfarve": $grejfreak-baggrund; // Baggrundsfarve
// - "footer": $grejfreak-footer;    // Footer-baggrundsfarve
// - "proMenu": $grejfreak-gr√∏n;     // Sekund√¶r gr√∏n farve, fx til menuer eller knapper
//
// HVORFOR:
// - Ved at definere `$custom-colors` som et map, kan vi **merge det ind i Bootstrap‚Äôs `$theme-colors`** senere.
// - Det giver os adgang til Bootstrap‚Äôs utility-klasser ‚Äì men med **vores egne farver**!
//   F.eks. `.bg-grejfreak`, `.text-footer`, `.border-proMenu`, osv.
//
// V√ÜRDI:
// - Det her er en smart og struktureret m√•de at integrere dine brandfarver direkte i Bootstrap.
// - Du f√•r al funktionalitet og genkendelig navngivning ‚Äì uden at skrive custom classes til alt.

$custom-colors: (
				"farve": $cyan-400,
				"grejfreak": $grejfreak-orange,
				"bagfarve": $grejfreak-baggrund,
				"footer": $grejfreak-footer,
				"proMenu": $grejfreak-gr√∏n,
);


// Sl√• vores egne farver sammen med Bootstrap's standard farver
//
// HVAD:
// - `$theme-colors` er en Bootstrap-variabel, der indeholder alle de farver,
//   som bruges til utility-klasser som `.bg-primary`, `.text-success`, `.border-warning`, osv.
//
// - `map-merge()` er en SCSS-funktion, der **kombinerer to maps** ‚Äì alts√• to lister af navngivne v√¶rdier.
//   Den tager f√∏rst det oprindelige map ($theme-colors) og tilf√∏jer eller overskriver med vores eget ($custom-colors).
//
// HVORFOR:
// - Dette g√∏r, at dine egendefinerede farver fra `$custom-colors` bliver en del af Bootstrap's farvesystem.
// - Det betyder, du kan bruge dine egne navne som `.bg-grejfreak`, `.text-footer`, `.border-proMenu`, osv. direkte i HTML og SCSS.
//
// FORDEL:
// - Du undg√•r at skulle skrive specialklasser til hver farve ‚Äì Bootstrap-klasserne virker med dine egne navne!
// - Du bevarer al Bootstrap-funktionalitet, men med dit eget brand.

$theme-colors: map-merge($theme-colors, $custom-colors);


// Import√©r dine egne Bootstrap-komponenter her
//
// üîπ HVAD:
// - Her importerer du din egen fil `"bootstrapComponents"`, som kan indeholde
//   overskrevet eller udvalgt Bootstrap-kode ‚Äì eller custom styling, mixins og komponenter.
//
// üîπ FORDEL:
// - Det giver dig fuld kontrol over hvilke Bootstrap-dele, du bruger ‚Äì og hvordan de ser ud.
// - Du kan holde al din stilrene Grejfreak-styling samlet √©t sted.

@import "bootstrapComponents";


// 5. Du kan lave styling her...

// Det her er det perfekte sted til at begynde at skrive din egen styling.
// - Alt hvad du skriver nu vil have adgang til dine variabler og Bootstrap‚Äôs strukturer.
// - Du kan nu bruge dine egne farver, fonts, utilities og mixins.


// ID: <body> ‚Äì Hele sidens grundstruktur

// Denne styling g√¶lder for hele body-elementet (selve "skelettet" af siden).
// Den sikrer, at layout, baggrund og skrifttype f√∏lger brandets designstandarder,
// og den g√∏r siden responsiv med flexbox.
// <body> er IKKE et ID i sig selv, men et HTML-element ‚Äì det er alligevel her,
// man definerer grundindstillingerne for alt, der vises p√• sk√¶rmen.
body {
	background-color: $grejfreak-baggrund;  // Brugerdefineret baggrundsfarve (lys beige tone)
	font-family: $font-grejfreak;           // Bruger brandets skrifttype (Exo 2)
	min-height: 100vh;                      // Body fylder hele sk√¶rmen i h√∏jden
	display: flex;                          // Flexbox container
	flex-direction: column;                // Vertikal stacking: header ‚Üí main ‚Üí footer
	overflow-x: hidden;                    // Forhindrer vandret scroll p√• hele siden


	// .sticky-info ‚Äì Fastgjort infoboks under scroll p√• Produkt siden

	// Denne klasse bruges til elementer, der skal ‚Äúkl√¶be‚Äù til toppen af sk√¶rmen,
	// n√•r brugeren scroller ned. Det er is√¶r nyttigt til infobokse, CTA‚Äôer, knapper
	// eller navigations-elementer, der skal v√¶re synlige hele tiden.

	.sticky-info {
		position: sticky;   // CSS-egenskab der ‚Äúklistrer‚Äù elementet, n√•r det scrolles til positionen
		top: 100px;         // Elementet bliver st√•ende 100px fra toppen af vinduet
	}

}



// SCSS: Variabler, fuglereder (nested rules), mixins

// SCSS er en udvidelse af CSS, som g√∏r det lettere at arbejde med styling.
// Det giver mulighed for:
// - variabler ($) som genbruges mange steder
// - fuglereder (nested rules) der spejler HTML-strukturen
// - mixins og funktioner, som sparer dig for gentagelser
//
// N√•r SCSS "compiles" (overs√¶ttes), bliver det til almindelig CSS,
// som browseren kan l√¶se. Du skriver smartere ‚Äì browseren f√•r ren CSS.



// Overskrifter (h1‚Äìh6)

// Her styles alle overskriftsniveauer p√• √©n gang, s√• de f√∏lger dit brand.
// Det er effektivt med SCSS, fordi du kan samle reglerne √©t sted.

h1, h2, h3, h4, h5, h6 {
	font-family: $font-grejfreak;       // Din valgte skrifttype
	color: $grejfreak-orange;           // Din brandfarve (orange)
	font-weight: bold;                  // G√∏r overskrifterne tydeligt markeret
}



//Fed tekst ‚Äì <b>

// Her gives den samme styling som overskrifter til <b>-elementer.

b {
	color: $grejfreak-orange;           // G√∏r fed tekst brandfarvet
	font-weight: bold;                  // G√∏r det visuelt tydeligere
}



// .gf-heading ‚Äì Genanvendelig over skrift

// Bruges som specialklasse til overskrifter, som skal centreres og skille sig ud.
// F.eks. i sektioner, hvor du ikke vil bruge <h1>, men stadig have den samme stil.

.gf-heading {
	font-family: $font-grejfreak;       // Samme font som resten af sitet
	color: $grejfreak-orange;           // Holder brandidentiteten
	font-weight: bold;                  // G√∏r det kraftigt og synligt
	text-align: center;                 // Centrerer teksten
	margin-bottom: 2rem;                // Giver luft under ‚Äì bedre visuel balance
}





// .hero-img ‚Äì Billedet √∏verst i layoutet

// Denne klasse bruges til store topbilleder (hero sections).
// Det sikrer, at billedet fylder hele bredden, men ikke bliver alt for h√∏jt.
// `object-fit: cover` s√∏rger for at billedet besk√¶res korrekt uden at forvr√¶nge det.
// Det giver et professionelt udtryk p√• tv√¶rs af sk√¶rmst√∏rrelser.

.hero-img {
	width: 100%;             // Fylder hele containerens bredde
	max-height: 500px;       // Begr√¶nser h√∏jden, s√• det ikke fylder for meget
	object-fit: cover;       // Besk√¶rer billedet p√¶nt uden forvr√¶ngning
	display: block;          // Fjerner u√∏nsket mellemrum under billedet (default for <img>)
}


// <footer> ‚Äì Nederste sektion af siden

// Her styles footeren med m√∏rk baggrund og brandets skrifttype.
// Alt indhold indeni er struktureret i fuglereder (nested rules),
// s√• det matcher HTML‚Äôen og er lettere at overskue og vedligeholde.

footer {
	background-color: $grejfreak-footer;    // M√∏rk farve som baggrund
	font-family: $font-grejfreak;           // Brandets skrifttype


	// main (kun relevant i flex-layouts)

	// Selvom <main> typisk ikke ligger inde i <footer>,
	// er denne regel m√•ske fejlplaceret. Hvis det var et uheld, b√∏r den flyttes ud.
	// Den har ingen virkning her og b√∏r sandsynligvis ligge udenfor footer-blokken.
	main {
		flex: 1;  // [OBS!] B√∏r flyttes ud ‚Äì har ikke effekt her inde i <footer>
	}


	// .payment-logos img

	// Styling af betalingsikoner i bunden af siden.
	// Giver passende st√∏rrelse og afstand mellem logoerne.
	.payment-logos img {
		height: 40px;        // Ens h√∏jde for alle logoer
		margin: 0 10px;      // Vandret afstand mellem dem
	}

	// .aabningstider li

	// Styling af √•bningstider vist i listeform ‚Äì uden punkttegn og med hvid tekst.
	.aabningstider {
		li {
			color: white;            // Kontrast mod m√∏rk footer baggrund
			list-style: none;        // Fjerner standard bullet-points
		}
	}
}





